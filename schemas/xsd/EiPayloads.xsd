<?xml version="1.0" encoding="iso-8859-1"?>
<!-- edited with XMLSpy v2019 rel. 3 sp1 (x64) (http://www.altova.com) by Toby Considine (TC9) -->
<!--
	 Schemas for the Common Transactive Services
	 
	 Profiled to use Minimal PIM Conformant WS-Calendar, WS-Calendar Streams, Strip GML
		
	 Removed references to VENs, VTNs to leave Common Transactive Services only
	 Removed Targets and related material tied to DR Evants
	 as part of the NIST Open Source Software for Energy Markets using CTS Project
	 Copyright 2019 Toby Considine, TC9, Inc and William T Cox, Cox Software Architects, LLC 
	 
	 Based on OASIS Energy Market Information Exchange (EMIX) Version 1.0 Committee Specification 02 11 January 2012
	 Copyright (c) OASIS Open 2012.  All Rights Reserved.
	 
	 Source: http://docs.oasis-open.org/emix/emix/v1.0/cs02/xsd/
-->
<!-- EIPayloads.xsd 
Schema agency:     Energy Mashup Lab, NIST CTS OSS Project
Schema version:    0.4
Schema date:       4 October 2019

Set includes:
    EMIX, EMIX-Terms, EMIX-Warrants (emix)
    Power, Power-Warrants, Power-Quality (power)
    Resource (resource)
	SIScale (siscale) 
-->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:pyld="http://docs.oasis-open.org/ns/energyinterop/201110/payloads/cts.04" xmlns:ei="http://docs.oasis-open.org/ns/energyinterop/201110/cts.04" xmlns:emix="http://docs.oasis-open.org/ns/emix/2011/06/cts.04" xmlns:strm="http://docs.oasis-open.org/ws-calendar/ns/streams/201606" targetNamespace="http://docs.oasis-open.org/ns/energyinterop/201110/payloads/cts.04">
	<xs:import namespace="http://docs.oasis-open.org/ns/emix/2011/06/cts.04" schemaLocation="emix.xsd"/>
	<xs:import namespace="http://docs.oasis-open.org/ns/energyinterop/201110/cts.04" schemaLocation="EIClasses.xsd"/>
	<xs:import namespace="http://docs.oasis-open.org/ws-calendar/ns/streams/201606" schemaLocation="ws-calendar-streams-v1.0.xsd"/>
	<xs:element name="eiCreateQuote" type="pyld:EiCreateQuoteType"/>
	<xs:complexType name="EiCreateQuoteType">
		<xs:annotation>
			<xs:documentation>Used to create and send a Quote.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:publisherPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:subscriberPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiQuote" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreatedQuote" type="pyld:EiCreatedQuoteType"/>
	<xs:complexType name="EiCreatedQuoteType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:subscriberPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:publisherPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:quoteID" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>If present, the response is limited to the quote[s] with respect to the counterparty with these IDs.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCancelQuote" type="pyld:EiCancelQuoteType"/>
	<xs:complexType name="EiCancelQuoteType">
		<xs:annotation>
			<xs:documentation>Used to cancel a Quote or Quotes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:subscriberPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:publisherPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:quoteID" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCanceledQuote" type="pyld:EiCanceledQuoteType"/>
	<xs:complexType name="EiCanceledQuoteType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:subscriberPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:publisherPartyID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiRequestQuote" type="pyld:EiRequestQuoteType"/>
	<xs:complexType name="EiRequestQuoteType">
		<xs:annotation>
			<xs:documentation>Used to request outstanding Quotes.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:requestorPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:publisherPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="emix:marketContext" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="ei:quoteID" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="strm:intervals" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If present, limits range of request to Quotes for products that occur within Interval.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiReplyQuote" type="pyld:EiReplyQuoteType"/>
	<xs:complexType name="EiReplyQuoteType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiQuote" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<!-- 6.0 Registration Payloads -->
	<xs:element name="eiCreatePartyRegistration" type="pyld:EiCreatePartyRegistrationType"/>
	<xs:complexType name="EiCreatePartyRegistrationType">
		<xs:annotation>
			<xs:documentation>Used to create and send a Party Registration request.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registreePartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:eiRegistrationInfo" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreatedPartyRegistration" type="pyld:EiCreatedPartyRegistrationType"/>
	<xs:complexType name="EiCreatedPartyRegistrationType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registrarPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:registrationID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:registreePartyID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiRequestPartyRegistration" type="pyld:EiRequestPartyRegistrationType"/>
	<xs:complexType name="EiRequestPartyRegistrationType">
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registreePartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registrarPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:requestorPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registrationID" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="strm:intervals" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If present, limits range of request to registrations within Interval.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiReplyPartyRegistration" type="pyld:EiReplyPartyRegistrationType"/>
	<xs:complexType name="EiReplyPartyRegistrationType">
		<xs:sequence>
			<xs:element ref="ei:eiRegistration" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCancelPartyRegistration" type="pyld:EiCancelPartyRegistrationType"/>
	<xs:complexType name="EiCancelPartyRegistrationType">
		<xs:annotation>
			<xs:documentation>Used to cancel one or more Party Registrations.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registreePartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registrarPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registrationID" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCanceledPartyRegistration" type="pyld:EiCanceledPartyRegistrationType"/>
	<xs:complexType name="EiCanceledPartyRegistrationType">
		<xs:sequence>
			<xs:element ref="ei:respondingPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registreePartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:registrarPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiResponse" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiRequestEiMarketContext" type="pyld:EiRequestEiMarketContextType"/>
	<xs:complexType name="EiRequestEiMarketContextType">
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="emix:marketContext" minOccurs="1" maxOccurs="unbounded"/>
			<xs:element ref="ei:partyID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiReplyEiMarketContext" type="pyld:EiReplyEiMarketContextType"/>
	<xs:complexType name="EiReplyEiMarketContextType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreateTender" type="pyld:EiCreateTenderType"/>
	<xs:complexType name="EiCreateTenderType">
		<xs:annotation>
			<xs:documentation>Used to create and send a Tender.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiTender" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreatedTender" type="pyld:EiCreatedTenderType"/>
	<xs:complexType name="EiCreatedTenderType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:tenderID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiRequestTender" type="pyld:EiRequestTenderType"/>
	<xs:complexType name="EiRequestTenderType">
		<xs:annotation>
			<xs:documentation>Used to Request outstanding Tenders.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="ei:requestorPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="emix:marketContext" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="ei:tenderID" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="strm:intervals" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If present, limits range of request to tender made for products that occur within Interval.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiReplyTender" type="pyld:EiReplyTenderType"/>
	<xs:complexType name="EiReplyTenderType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiTender" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCancelTender" type="pyld:EiCancelTenderType"/>
	<xs:complexType name="EiCancelTenderType">
		<xs:annotation>
			<xs:documentation>Used to Cancel one or more Tenders.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="ei:tenderID" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCanceledTender" type="pyld:EiCanceledTenderType"/>
	<xs:complexType name="EiCanceledTenderType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiDistributeTender" type="pyld:EiDistributeTenderType"/>
	<xs:complexType name="EiDistributeTenderType">
		<xs:annotation>
			<xs:documentation>Used for Broadcast of Tenders.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiTender" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreateTransaction" type="pyld:EiCreateTransactionType"/>
	<xs:complexType name="EiCreateTransactionType">
		<xs:annotation>
			<xs:documentation>Used to create and send a Transaction.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiTransaction" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreatedTransaction" type="pyld:EiCreatedTransactionType"/>
	<xs:complexType name="EiCreatedTransactionType">
		<xs:sequence>
			<xs:element ref="ei:counterPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:transactionID" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiRequestTransaction" type="pyld:EiRequestTransactionType"/>
	<xs:complexType name="EiRequestTransactionType">
		<xs:annotation>
			<xs:documentation>Request extant Transactions.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:partyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:counterPartyID" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="ei:requestorPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="emix:marketContext" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="ei:transactionID" minOccurs="0" maxOccurs="unbounded"/>
			<xs:element ref="strm:intervals" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>If present, limits range of request to transactions that occur within Interval.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiReplyTransaction" type="pyld:EiReplyTransactionType"/>
	<xs:complexType name="EiReplyTransactionType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiTransaction" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreateDelivery" type="pyld:EiCreateDeliveryType"/>
	<xs:complexType name="EiCreateDeliveryType">
		<xs:annotation>
			<xs:documentation>Create Delivery passes 1 or more "empty" emix deliveries as a request to receive each back with quantities filled in as eiDeliveries.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="pyld:requestID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:requestorPartyID" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="emix:delivery" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="eiCreatedDelivery" type="pyld:EiCreatedDeliveryType"/>
	<xs:complexType name="EiCreatedDeliveryType">
		<xs:sequence>
			<xs:element ref="ei:eiResponse" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="ei:eiDelivery" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="requestID" substitutionGroup="ei:refID"/>
</xs:schema>
