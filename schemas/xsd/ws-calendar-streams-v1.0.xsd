<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSpy v2019 rel. 3 sp1 (x64) (http://www.altova.com) by Toby Considine (TC9) -->
<!--
	 Schemas for the Common Transactive Services
	 
	 Profiled to use Minimal PIM Conformant WS-Calendar, WS-Calendar Streams, Strip GML
	 Removed references to VENs, VTNs to leave Common Transactive Services only 
     as part of the NIST Open Source Software using CTS Project
	 
	 2019 for The Energy Mashup Lab
	 - Toby Considine, TC9, Inc
	 - William T Cox, Cox Software Architects, 
	 
-->
<!--
	 Schemas for the Common Transactive Services
	 
	 Profiled to use Minimal PIM Conformant WS-Calendar, WS-Calendar Streams, Strip GML
		
	 Imported to GitHub for Project purposes.
	 Schema agency:     NIST EMIX for CTS
	 Schema version:    0.4
	 Schema date:       5 October 2019
	 
	 Fiexed erratum:	StreamInterval is no longer Abstract

-->
<!-- Schedule Signals and Streams Version 1.0 Committee Specification 01 18 September 2016 
Copyright (c) OASIS Open 2016. All Rights Reserved. 
Source: http://docs.oasis-open.org/ws-calendar/streams/v1.0/cs01/xsd/ 
Latest version of the specification: http://docs.oasis-open.org/ws-calendar/streams/v1.0/streams-v1.0.html 
TC IPR Statement: https://www.oasis-open.org/committees/ws-calendar/ipr.php -->
<!-- These extensions were developed to meet the specific needs for an extensible PSM of WS-Calendar for use in telemetry, reporting, and projection processing of interval-based information. WS-Calendar streams are intended to to be transformable into artifacts that work in conjunction with conformant implementations of IETF RFC 5545 ( http://www.rfc-editor.org/rfc/rfc5545.txt ), the normative specification of iCalendar, but are not themselves so conformant. WS-Calendar Streams conform to WS-Calendar PIM, as does the WS-Calendar (PSM) itself, so the specifications can be transitively transformed into each other. While the Streams is a PSM, it is an abstract PSM in that the PayloadBase must be defined through extension to be meaningful in any particular domain -->
<!-- The semantics are defined in the WS-Calendar MIN Specification, as before. This Schema has been updated to reference the action MIN schema which has been re-published in the interim. Otherwise it is identical to that used in WD07. -->
<!--WS-Calendar Streams PSM -->
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:strm="http://docs.oasis-open.org/ws-calendar/ns/streams/201606" xmlns:min="http://docs.oasis-open.org/ws-calendar/ns/min-xcal/2015/12" targetNamespace="http://docs.oasis-open.org/ws-calendar/ns/streams/201606" elementFormDefault="qualified">
	<xs:import namespace="http://docs.oasis-open.org/ws-calendar/ns/min-xcal/2015/12" schemaLocation="ws-calendar-min-v1.0.xsd"/>
	<!-- 1.0 Abstract Stream Base -->
	<xs:element name="streamBase" type="strm:StreamBaseType" abstract="true"/>
	<xs:complexType name="StreamBaseType" abstract="true">
		<xs:annotation>
			<xs:documentation>abstract base for communication of schedules for signals and observations</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="min:dtStart" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates when the Designated Interval of the Stream begins. May be inherited from containing artifact.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="min:duration" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates the duration inherited by the intervals. May be inherited from containing artifact.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="strm:streamPayloadBase" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="strm:intervals" minOccurs="0" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<!-- 1.1 Abstract Stream Specifier -->
	<xs:element name="streamSpecifier" type="strm:StreamSpecifierType" abstract="true"/>
	<xs:complexType name="StreamSpecifierType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract base for specifying Stream schedules for signals and observations. While streams communicate time-sequences of data, StreamSpecifiers describe the Time Sequence. A specifier can be used by a Requester to define a Stream which may be avilable at a later time. If a Stream impliments the pattern of Gluon and Sequence, the Stream SPecifier is a Gluon from which the Sequence can be computed.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="min:dtStart" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Indicates when the Designated Interval of the Stream begins. May be inherited from containing artifact.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="strm:streamDuration" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="strm:leadDuration" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="strm:lagDuration" minOccurs="0" maxOccurs="1"/>
			<xs:element ref="min:granularity" minOccurs="1" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>How frequently the [measurement] is to be recorded. When considering the StreamSpecifier as a Gluon, the the granularity is the Duration inherited by each Interval in the sequence.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="strm:streamPayloadBase" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<!-- 1.2 Additional Semantics for Stream Specifier -->
	<xs:element name="streamDuration" type="min:DurationType">
		<xs:annotation>
			<xs:documentation>If a stream specifier is describing telemetery about an event, then the even can be computed as the sequence of Intervals begining at the dtStart and extending for the streamDuration. For example, an event may begin at 1:00 and extend for two hours.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="leadDuration" type="min:DurationType">
		<xs:annotation>
			<xs:documentation>In telemetry, it is often useful to begin recording before an event. The Lead Duration specified a time before an which the Stream should include.If the dtStart used to compute the Designated Interval, the leadDuration is used to compute the intervals before the Designated Interval.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<xs:element name="lagDuration" type="min:DurationType">
		<xs:annotation>
			<xs:documentation>In telemetry, it is often useful to begin recording after an event. The Lead Duration specified a time before an which the Stream should include.If the dtStart used to compute the Designated Interval, the leadDuration is used to compute the intervals before the Designated Interval.</xs:documentation>
		</xs:annotation>
	</xs:element>
	<!-- 2.0 Stream Intervals Type -->
	<xs:element name="intervals" type="strm:ArrayofStreamIntervals"/>
	<xs:complexType name="ArrayofStreamIntervals">
		<xs:annotation>
			<xs:documentation>Collection of Stream Interval derived elements that comprise a signal partition.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="strm:streamInterval" minOccurs="1" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="streamInterval" type="strm:StreamIntervalType"/>
	<xs:complexType name="StreamIntervalType" mixed="false">
		<xs:annotation>
			<xs:documentation xml:lang="en">Restricted variant of ws-calendar interval for streams. Stream Intervals are restricted expressions of the WS-Calendar Interval that are transformable to but not identical to WS-Calendar Intervals.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="strm:uid" minOccurs="1" maxOccurs="1"/>
			<xs:element ref="strm:streamPayloadBase" minOccurs="1" maxOccurs="1"/>
		</xs:sequence>
	</xs:complexType>
	<xs:element name="streamPayloadBase" type="strm:StreamPayloadBaseType" abstract="true"/>
	<xs:complexType name="StreamPayloadBaseType" abstract="true">
		<xs:annotation>
			<xs:documentation>Abstract class to convey a payload for a stream. When a Stream is transformed to or from a WS-Calendar Interval, the contents of the Stream Payload defined element are transformed into the contents of a WS-Calendar artifactBase.</xs:documentation>
		</xs:annotation>
	</xs:complexType>
	<xs:element name="uid" type="strm:UidType"/>
	<xs:simpleType name="UidType">
		<xs:annotation>
			<xs:documentation>Unique Identifier</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string"/>
	</xs:simpleType>
</xs:schema>
